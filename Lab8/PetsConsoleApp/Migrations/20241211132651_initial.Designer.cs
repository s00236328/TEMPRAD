// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetsConsoleApp;

#nullable disable

namespace PetsConsoleApp.Migrations
{
    [DbContext(typeof(Petsdb))]
    [Migration("20241211132651_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ModelsClass.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VeterinarianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OwnerId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ModelsClass.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PetId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("ModelsClass.PetToy", b =>
                {
                    b.Property<int>("PetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PetId", "ToyId");

                    b.HasIndex("ToyId");

                    b.ToTable("PetToys");
                });

            modelBuilder.Entity("ModelsClass.Toy", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ToyId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("ModelsClass.Veterinarian", b =>
                {
                    b.Property<int>("VeterinarianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VeterinarianId");

                    b.ToTable("Veterinarians");
                });

            modelBuilder.Entity("ModelsClass.Owner", b =>
                {
                    b.HasOne("ModelsClass.Veterinarian", "Veterinarian")
                        .WithMany("Owners")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("ModelsClass.Pet", b =>
                {
                    b.HasOne("ModelsClass.Owner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ModelsClass.PetToy", b =>
                {
                    b.HasOne("ModelsClass.Pet", "Pet")
                        .WithMany("PetToys")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsClass.Toy", "Toy")
                        .WithMany("PetToys")
                        .HasForeignKey("ToyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("ModelsClass.Owner", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("ModelsClass.Pet", b =>
                {
                    b.Navigation("PetToys");
                });

            modelBuilder.Entity("ModelsClass.Toy", b =>
                {
                    b.Navigation("PetToys");
                });

            modelBuilder.Entity("ModelsClass.Veterinarian", b =>
                {
                    b.Navigation("Owners");
                });
#pragma warning restore 612, 618
        }
    }
}
