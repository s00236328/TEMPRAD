// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentMCVApp;

#nullable disable

namespace StudentMCVApp.Migrations
{
    [DbContext(typeof(CollegeDb))]
    partial class CollegeDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("StudentClassLibrary.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Lecturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CoursesMCV");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Mathematics",
                            Lecturer = "Dr. Skibidi",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Physics",
                            Lecturer = "Dr. Pimp",
                            Name = "Physics"
                        });
                });

            modelBuilder.Entity("StudentClassLibrary.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StudentsMCV");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            EmailAddress = "alice@gmail.com",
                            Name = "Blood Johnson"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            EmailAddress = "bob@gmail.com",
                            Name = "Crip Smith"
                        });
                });

            modelBuilder.Entity("StudentCourse", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("StudentCourse");

                    b.HasData(
                        new
                        {
                            CoursesId = 1,
                            StudentsId = 1
                        },
                        new
                        {
                            CoursesId = 2,
                            StudentsId = 2
                        });
                });

            modelBuilder.Entity("StudentCourse", b =>
                {
                    b.HasOne("StudentClassLibrary.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentClassLibrary.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
